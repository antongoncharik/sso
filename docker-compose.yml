version: '3.7'

services:
  db:
    container_name: db
    image: postgres
    env_file:
      - ./.env
    ports:
      - "${DB_PORT}:${DB_PORT}"
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - db_data:/var/lib/postgresql/data

  migrator:
    container_name: migrator
    image: migrate/migrate
    env_file:
      - ./.env
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./migrations:/migrations
    command: -path=/migrations -database postgres://${DB_USER}:${DB_PASSWORD}@db:${DB_PORT}/${DB_NAME}?sslmode=disable up

  backup:
    container_name: backup
    build:
      context: ./config/backup
      dockerfile: Dockerfile
    volumes:
      - ./backups:/backups
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    restart: always
    depends_on:
      migrator:
        condition: service_completed_successfully      
      
  app:
    container_name: app
    # image: antgoncharik/crypto-knight-api
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - ./.env
    ports:
      - "8080:8080"
    restart: always
    depends_on:
      migrator:
        condition: service_completed_successfully      

  # certbot:
  #   container_name: certbot
  #   image: certbot/certbot
  #   volumes:
  #     - ./certs:/etc/letsencrypt
  #     - ./certs:/var/www/certbot
  #   command: certonly --webroot --webroot-path=/var/www/certbot --email ant.goncharik.development@gmail.com --agree-tos --no-eff-email --force-renewal -d api.crypto-knight.online

  nginx:
    container_name: nginx
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    restart: always
    volumes:
      - ./config/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./certs:/etc/nginx/certs
      - ./certs:/var/www/certbot
    depends_on:
      app:
        condition: service_started
      # certbot:
      #   condition: service_completed_successfully      

volumes:
  db_data: